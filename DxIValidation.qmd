---
title: "DxI9000Validation"
format: html
editor: visual
---

```{r, echo=FALSE, warning=FALSE, message=FALSE}
#prepare libraries
library(readxl)
library(data.table)
library(tidyverse)
library(DBI)
library(RSQLite)

```

# Daten einlesen

```{r}

setwd("C:/R_local/autoVal")

# read DXI data
val.dat <- read_excel("240307rawdata.xlsx")
setDT(val.dat)

# automatically create a SQL TABLE containing DxI9000 data
# function to map R data types to SQLite data types
map_data_types <- function(df) {
  sapply(df, function(column) {
    dtype <- class(column)[1]  # Get the class of the column. If multiple, take the first.
    switch(dtype,
           "factor" = "TEXT",
           "character" = "TEXT",
           "integer" = "INTEGER",
           "numeric" = "REAL",
           "Date" = "TEXT",  # SQLite does not have a DATE type, so dates are often stored as TEXT
           "POSIXct" = "TEXT",  # or as INTEGER (Unix Time)
           "logical" = "INTEGER",  # TRUE/FALSE mapped to 1/0
           "UNKNOWN")  # Default case if type not matched
  })
}

# map data types from val.dat
col_types <- map_data_types(val.dat)

# construct a CREATE TABLE statement for val.dat using the mapped data types
create_table_statement <- paste0("CREATE TABLE IF NOT EXISTS DxIvalData (",
                                paste(names(col_types), col_types, sep=" ", collapse=", "),
                                ", ValidationID INTEGER PRIMARY KEY AUTOINCREMENT",
                                ", FOREIGN KEY (Bezeichnung) REFERENCES MethodData(Bezeichnung)",
                                ")") # ich warte noch auf die komplette Liste der TestName damit ich die Foreign Key erstellen kann


# construct a dynamic SQL query to import DxI800 measurement data from INLAB
values <- sQuote(substr( as.character( val.dat$SampleID ), 1, 10.), q=FALSE )
n <-  10

conditions <- paste(sprintf("SUBSTR(Probennummer, 1, %d) = %s", n, values), collapse = " OR ")
query <- sprintf("SELECT * FROM MeasurementData WHERE %s", conditions)


# connect to SQLite DB  ----------------------------------------------------

con <- dbConnect(SQLite(), dbname = "C:/R_local/labStat/ClinicalChemistry_test.db")

dbListTables(con)

query.val.data <- dbGetQuery( con, query )
summary(query.va.data)


```

```{r, warning=FALSE, message=FALSE}
# set working directory ----------------------------------------------------
setwd("C:/R_local/autoVal")

```

```{r}
#read data
val.dat <- read_excel("240307rawdata.xlsx")
pat.dat <- DT.tidy.dxi
setDT(pat.dat)
setDT(val.dat)

#add key to join data
val.dat[, key.val := as.numeric(substr(as.character(SampleID),1 ,10))]
pat.dat[, key.pat := as.numeric(Probennummer)]

#join data
val.dat <- val.dat[pat.dat, Ferritin2 := i.Ferritin, on = "key.val == key.pat"]

# copy val.dat$Ferritin2 and val.dat$Ferritin to a new data.table
val.dat2 <- val.dat[TestName == "Ferritin",][, .(SampleID, TestName, DoseResult, DoseUnit, Ferritin2)]

```
